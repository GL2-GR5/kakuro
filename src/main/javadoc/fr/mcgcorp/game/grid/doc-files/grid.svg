<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1006px" preserveAspectRatio="none" style="width:1275px;height:1006px;" version="1.1" viewBox="0 0 1275 1006" width="1275px" zoomAndPan="magnify"><defs><filter height="300%" id="f1999hw2my7093" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="373" x="457" y="16.708">"Diagramme de classes de la grille du jeu"</text><!--MD5=[86674ab5735079aa6b5321d691891463]
cluster legend--><polygon fill="#ADD8E6" filter="url(#f1999hw2my7093)" points="22,44.9531,82,44.9531,89,67.25,525,67.25,525,353.9531,22,353.9531,22,44.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="89" y1="67.25" y2="67.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="54" x="26" y="59.9482">legend</text><!--MD5=[8c40d9dd5d31fe877751a06228577dc5]
cluster Grid--><polygon fill="#D3D3D3" filter="url(#f1999hw2my7093)" points="549,168.9531,588,168.9531,595,191.25,1253,191.25,1253,957.9531,549,957.9531,549,168.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="549" x2="595" y1="191.25" y2="191.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="33" x="553" y="183.9482">Grid</text><!--MD5=[4cac391c179f8787f20d7dddb517ad5a]
class G--><rect fill="#FEFECE" filter="url(#f1999hw2my7093)" height="258.0078" id="G" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="145" y="79.9531"/><ellipse cx="253.25" cy="98.9219" fill="#FFFFFF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M252.7344,99.4844 Q250.875,98.7813 250.2188,98.0156 Q249.5781,97.2344 249.5781,95.9219 Q249.5781,94.2344 250.6563,93.2656 Q251.7344,92.2969 253.6094,92.2969 Q254.4688,92.2969 255.3125,92.5 Q256.1719,92.6875 257.0156,93.0781 L257.0156,95.4688 Q256.2344,94.9063 255.4063,94.625 Q254.5938,94.3281 253.7969,94.3281 Q252.9219,94.3281 252.4375,94.6875 Q251.9688,95.0469 251.9688,95.7031 Q251.9688,96.2188 252.3125,96.5625 Q252.6563,96.8906 253.75,97.2969 L254.8125,97.7031 Q256.2969,98.25 257,99.1563 Q257.7188,100.0625 257.7188,101.4375 Q257.7188,103.3125 256.6094,104.2344 Q255.5,105.1563 253.25,105.1563 Q252.3281,105.1563 251.4063,104.9375 Q250.4844,104.7188 249.625,104.2969 L249.625,101.7656 Q250.5938,102.4531 251.5156,102.7969 Q252.4375,103.1406 253.3281,103.1406 Q254.2344,103.1406 254.7344,102.7344 Q255.2344,102.3125 255.2344,101.5781 Q255.2344,101.0156 254.8906,100.6094 Q254.5625,100.1875 253.9375,99.9375 L252.7344,99.4844 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="271.75" y="96.0918">«Singleton»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="283.75" y="110.0605">General</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="68" x="444" y="76.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="449" y="89.0918">? general</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="146" x2="508" y1="117.8906" y2="117.8906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="153" y="142.6953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="165" y="148.9058">attributPrivee : type</text><polygon fill="none" points="156,153.5,160,157.5,156,161.5,152,157.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="165" y="161.7104">attributProtege : type</text><polygon fill="none" points="156,167.3047,152,173.3047,160,173.3047" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="165" y="174.5151">attributPackage : type</text><ellipse cx="156" cy="184.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="165" y="187.3198">attributPublic : type</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="146" x2="303" y1="132.293" y2="132.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="303" y="135.6011">Attributs</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="351" x2="508" y1="132.293" y2="132.293"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="146" x2="508" y1="193.9141" y2="193.9141"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="146" x2="508" y1="195.9141" y2="195.9141"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="153" y="218.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="165" y="224.9292">methodePrive(typeParams) : typeRetour # retourDefault</text><polygon fill="#FFFF44" points="156,229.5234,160,233.5234,156,237.5234,152,233.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="165" y="237.7339">methodeProtege(typeParams) : typeRetour # retourDefault</text><polygon fill="#4177AF" points="156,243.3281,152,249.3281,160,249.3281" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="165" y="250.5386">methodePackage(typeParams) : typeRetour # retourDefault</text><ellipse cx="156" cy="260.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="165" y="263.3433">methodePublic(typeParams) : typeRetour # retourDefault</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="146" x2="299.5" y1="208.3164" y2="208.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="299.5" y="211.6245">Méthodes</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="354.5" x2="508" y1="208.3164" y2="208.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="151" y="292.9526">@methodeOverride(typeParams) : typeRetour # retourDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="151" y="305.7573">methodeAbstract(typeParams) : typeRetour # retourDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="151" y="318.562">methodeStatic(typeParams) : typeRetour # retourDefault</text><text fill="#008000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="24" x="151" y="331.3667">final</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="317" x="179" y="331.3667">methodeFinal(typeParams) : typeRetour # retourDefault</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="146" x2="273.5" y1="276.3398" y2="276.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="273.5" y="279.6479">Méthodes Speciale</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="380.5" x2="508" y1="276.3398" y2="276.3398"/><!--MD5=[378b18254a1b2429f435e93f5e5cc50c]
class C--><rect fill="#FEFECE" filter="url(#f1999hw2my7093)" height="48" id="C" style="stroke: #A80036; stroke-width: 1.5;" width="72" x="38" y="184.9531"/><ellipse cx="53" cy="200.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55.9688,206.5938 Q55.3906,206.8906 54.75,207.0313 Q54.1094,207.1875 53.4063,207.1875 Q50.9063,207.1875 49.5781,205.5469 Q48.2656,203.8906 48.2656,200.7656 Q48.2656,197.6406 49.5781,195.9844 Q50.9063,194.3281 53.4063,194.3281 Q54.1094,194.3281 54.75,194.4844 Q55.4063,194.6406 55.9688,194.9375 L55.9688,197.6563 Q55.3438,197.0781 54.75,196.8125 Q54.1563,196.5313 53.5313,196.5313 Q52.1875,196.5313 51.5,197.6094 Q50.8125,198.6719 50.8125,200.7656 Q50.8125,202.8594 51.5,203.9375 Q52.1875,205 53.5313,205 Q54.1563,205 54.75,204.7344 Q55.3438,204.4531 55.9688,203.875 L55.9688,206.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="67" y="205.1074">classe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="109" y1="216.9531" y2="216.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="109" y1="224.9531" y2="224.9531"/><!--MD5=[f7d100365dfbb5d32a283a41bfff7f49]
class GridIt--><rect fill="#FEFECE" filter="url(#f1999hw2my7093)" height="201.6563" id="GridIt" style="stroke: #A80036; stroke-width: 1.5;" width="366" x="620" y="739.9531"/><ellipse cx="748.25" cy="755.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M751.2188,761.5938 Q750.6406,761.8906 750,762.0313 Q749.3594,762.1875 748.6563,762.1875 Q746.1563,762.1875 744.8281,760.5469 Q743.5156,758.8906 743.5156,755.7656 Q743.5156,752.6406 744.8281,750.9844 Q746.1563,749.3281 748.6563,749.3281 Q749.3594,749.3281 750,749.4844 Q750.6563,749.6406 751.2188,749.9375 L751.2188,752.6563 Q750.5938,752.0781 750,751.8125 Q749.4063,751.5313 748.7813,751.5313 Q747.4375,751.5313 746.75,752.6094 Q746.0625,753.6719 746.0625,755.7656 Q746.0625,757.8594 746.75,758.9375 Q747.4375,760 748.7813,760 Q749.4063,760 750,759.7344 Q750.5938,759.4531 751.2188,758.875 L751.2188,761.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="101" x="768.75" y="760.1074">Grid.GridIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="621" x2="985" y1="771.9531" y2="771.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="628" y="779.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="640" y="786.1636">cell : Coord # null</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="628" y="792.7578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="640" y="798.9683">start : Coord # new Coord()</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="628" y="805.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="640" y="811.7729">end : Coord # Kakuro.getLastCoord()</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="628" y="818.3672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="640" y="824.5776">moveMethod : Function&lt;Coord,Boolean&gt; # c-&gt;(c.nextCell())</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="640" y="837.3823">block : boolean # false</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="640" y="850.187">nbReturn : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="621" x2="985" y1="856.7813" y2="856.7813"/><polygon fill="#4177AF" points="631,863.7813,627,869.7813,635,869.7813" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="640" y="870.9917">GridIterator(void) : GridIterator</text><polygon fill="#4177AF" points="631,876.5859,627,882.5859,635,882.5859" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="232" x="640" y="883.7964">GridIterator(C,C,B,F&lt;C,B&gt;) : GridIterator</text><ellipse cx="631" cy="893.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="640" y="896.6011">@hasNext(void) : boolean</text><ellipse cx="631" cy="906.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="640" y="909.4058">@next(void) : Cell</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="628" y="916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="640" y="922.2104">inBlock(void) : boolean</text><ellipse cx="631" cy="931.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="640" y="935.0151">getCoord(void) : Coord</text><path d="M1021,815.9531 L1021,832.0859 L769,931.207 L1021,840.0859 L1021,856.2188 A0,0 0 0 0 1021,856.2188 L1181,856.2188 A0,0 0 0 0 1181,856.2188 L1181,825.9531 L1171,815.9531 L1021,815.9531 A0,0 0 0 0 1021,815.9531 " fill="#FBFB77" filter="url(#f1999hw2my7093)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1171,815.9531 L1171,825.9531 L1181,825.9531 L1171,815.9531 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="1027" y="833.02">"Coordonnées de la</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="139" x="1027" y="848.1528">dernière Cell envoyé."</text><ellipse cx="570" cy="538.9531" fill="#FEFECE" filter="url(#f1999hw2my7093)" rx="5" ry="5" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="520.5" y="555.0918">java.util.Iterator</text><!--MD5=[1f24f7b92150e3316908f7910ce81742]
class Grid--><rect fill="#FEFECE" filter="url(#f1999hw2my7093)" height="281.6797" id="Grid" style="stroke: #A80036; stroke-width: 1.5;" width="280" x="957" y="397.9531"/><ellipse cx="1080.25" cy="413.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1083.2188,419.5938 Q1082.6406,419.8906 1082,420.0313 Q1081.3594,420.1875 1080.6563,420.1875 Q1078.1563,420.1875 1076.8281,418.5469 Q1075.5156,416.8906 1075.5156,413.7656 Q1075.5156,410.6406 1076.8281,408.9844 Q1078.1563,407.3281 1080.6563,407.3281 Q1081.3594,407.3281 1082,407.4844 Q1082.6563,407.6406 1083.2188,407.9375 L1083.2188,410.6563 Q1082.5938,410.0781 1082,409.8125 Q1081.4063,409.5313 1080.7813,409.5313 Q1079.4375,409.5313 1078.75,410.6094 Q1078.0625,411.6719 1078.0625,413.7656 Q1078.0625,415.8594 1078.75,416.9375 Q1079.4375,418 1080.7813,418 Q1081.4063,418 1082,417.7344 Q1082.5938,417.4531 1083.2188,416.875 L1083.2188,419.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="1100.75" y="418.1074">Grid</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="958" x2="1236" y1="429.9531" y2="429.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="965" y="437.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="977" y="444.1636">grid : Cell[][]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="965" y="450.7578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="977" y="456.9683">lstCoordResCell : List&lt;Coord&gt;</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="958" x2="1236" y1="463.5625" y2="463.5625"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="958" x2="1236" y1="465.5625" y2="465.5625"/><ellipse cx="968" cy="491.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="977" y="494.5776">new Grid(/*lstParam*/) : Grid</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="958" x2="1060" y1="477.9648" y2="477.9648"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="1060" y="481.2729">Constructeur</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1134" x2="1236" y1="477.9648" y2="477.9648"/><ellipse cx="968" cy="520.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="977" y="524.187">getCell(Coord) : Cell</text><ellipse cx="968" cy="533.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="977" y="536.9917">getCell(GridIterator,Predicate&lt;T&gt;) : Cell</text><ellipse cx="968" cy="546.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="977" y="549.7964">getCoord(GridIterator,Predicate&lt;T&gt;) : Coord</text><ellipse cx="968" cy="559.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="977" y="562.6011">getLastCoord(void) : Coord</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="958" x2="1043.5" y1="507.5742" y2="507.5742"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1043.5" y="510.8823">Obtenir une cellule</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1150.5" x2="1236" y1="507.5742" y2="507.5742"/><ellipse cx="968" cy="589" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="977" y="592.2104">@iterator(void) : GridIterator</text><ellipse cx="968" cy="601.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="977" y="605.0151">iterator(C,C,B,F&lt;C,B&gt;) : GridIterator</text><ellipse cx="968" cy="614.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="977" y="617.8198">getAreas(Coord) : GridIterator[2]</text><ellipse cx="968" cy="627.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="977" y="630.6245">getLineAreas(void) : GridIterator</text><ellipse cx="968" cy="640.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="977" y="643.4292">getColumnAreas(void) : GridIterator</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="958" x2="1048" y1="575.5977" y2="575.5977"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1048" y="578.9058">Parcourir la grille</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1146" x2="1236" y1="575.5977" y2="575.5977"/><ellipse cx="968" cy="669.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="977" y="673.0386">serialize() : String</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="958" x2="1078.5" y1="656.4258" y2="656.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="1078.5" y="659.7339">Autres</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1115.5" x2="1236" y1="656.4258" y2="656.4258"/><path d="M610,433.4531 L610,488.8516 A0,0 0 0 0 610,488.8516 L902,488.8516 A0,0 0 0 0 902,488.8516 L902,465.1523 L961,520.3789 L902,457.1523 L902,443.4531 L892,433.4531 L610,433.4531 A0,0 0 0 0 610,433.4531 " fill="#FBFB77" filter="url(#f1999hw2my7093)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M892,433.4531 L892,443.4531 L902,443.4531 L892,433.4531 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="271" x="616" y="450.52">"Cherche une cellule matchant le prédicat,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="255" x="616" y="465.6528">en se déplaçant suivant la fonction (une</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="199" x="616" y="480.7856">méthode de Grid.GridIterator)."</text><path d="M610,498.8516 L610,569.3828 A0,0 0 0 0 610,569.3828 L922,569.3828 A0,0 0 0 0 922,569.3828 L922,538.1172 L961,601.207 L922,530.1172 L922,508.8516 L912,498.8516 L610,498.8516 A0,0 0 0 0 610,498.8516 " fill="#FBFB77" filter="url(#f1999hw2my7093)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M912,498.8516 L912,508.8516 L922,508.8516 L912,498.8516 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="226" x="616" y="515.9185">"Crée un itérateur sur la grille allant</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="291" x="616" y="531.0513">du début(0,0) à la fin(Kakuro.LAST_COORD()).</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="182" x="616" y="546.1841">Le mode block est désactivé</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="275" x="616" y="561.3169">et le parcours est dans le sens par défaut."</text><path d="M610,579.3828 L610,634.7813 A0,0 0 0 0 610,634.7813 L919,634.7813 A0,0 0 0 0 919,634.7813 L919,611.082 L961,669.2305 L919,603.082 L919,589.3828 L909,579.3828 L610,579.3828 A0,0 0 0 0 610,579.3828 " fill="#FBFB77" filter="url(#f1999hw2my7093)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M909,579.3828 L909,589.3828 L919,589.3828 L909,579.3828 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="236" x="616" y="596.4497">Les lignes sont séparées par des '\n'.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="288" x="616" y="611.5825">&gt; Exemple : "|B|B|W(5)|\\n|R(7,n)|W(n)|R(4,1)"</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="201" x="616" y="626.7153">&gt; Devient : "||5|\\n7,n|3|4,1|\\n"'</text><ellipse cx="1097" cy="208.9531" fill="#FEFECE" filter="url(#f1999hw2my7093)" rx="5" ry="5" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="1043" y="225.0918">java.lang.Iterable</text><!--MD5=[80a3efbc162ec9a29a5e48a2a8b8bfdd]
link C to G--><!--MD5=[50ddda66245f55aa46a39d41fda0c027]
link GridIt to GridIt$$$RIGHT--><!--MD5=[98f9494257fac0e3902daffc80e765a6]
link GridItlol122 to GridIt--><path d="M569.62,544.2231 C568.22,562.2231 564.83,633.0831 593,679.9531 C606.22,701.9531 623.71,721.9831 642.97,739.8531 " fill="none" id="GridItlol122-GridIt" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9aa4d8d2edbe2ff9ea4a7b9708ead3fd]
link Grid$$$LEFT to Grid--><!--MD5=[5fbe4a99e8286240fb6850166e763f9c]
link Gridlol128 to Grid--><path d="M1097,214.1031 C1097,233.7131 1097,319.4931 1097,397.8431 " fill="none" id="Gridlol128-Grid" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[52e2628ec817b028c66df643db85b006]
link Grid to GridIt--><path d="M959.47,680.2931 C942.98,697.1231 926.33,714.1031 910.35,730.4131 " fill="none" id="Grid-&gt;GridIt" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="901.03,739.9231,908.0864,738.4376,909.4291,731.3526,902.3727,732.8381,901.03,739.9231" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="273" x="507" y="993.2354">"La classes stockant les cellules du jeu et les parcourant"</text><!--MD5=[7b516d6325804ac48cedaf7e56db7fa0]
@startuml grid

title "Diagramme de classes de la grille du jeu"

package "legend" #lightblue {
  class "General" AS G < ? general > << (S,#FFFFFF) Singleton >> {
    .. Attributs ..
    {field} - attributPrivee : type
    {field} # attributProtege : type
    {field} ~ attributPackage : type
    {field} + attributPublic : type
    ==
    .. Méthodes ..
    {method} - methodePrive(typeParams) : typeRetour # retourDefault
    {method} # methodeProtege(typeParams) : typeRetour # retourDefault
    {method} ~ methodePackage(typeParams) : typeRetour # retourDefault
    {method} + methodePublic(typeParams) : typeRetour # retourDefault
    .. Méthodes Speciale ..
    {method} @methodeOverride(typeParams) : typeRetour # retourDefault
    {method} {abstract} methodeAbstract(typeParams) : typeRetour # retourDefault
    {method} {static} methodeStatic(typeParams) : typeRetour # retourDefault
    {method} {static} <color green>final</color> methodeFinal(typeParams) : typeRetour # retourDefault
  }

    class "classe" AS C
    C -[hidden]r-> G

}

package "Grid" #lightgrey {

	class "Grid.GridIterator" AS GridIt {
		{field} - cell : Coord # null
		{field} - start : Coord # new Coord()
		{field} - end : Coord # Kakuro.getLastCoord()
		{field} - moveMethod : Function<Coord,Boolean> # c->(c.nextCell())
		{field} block : boolean # false
		{field} nbReturn : int
		{method} {static} ~ GridIterator(void) : GridIterator
		{method} {static} ~ GridIterator(C,C,B,F<C,B>) : GridIterator
		{method} + @hasNext(void) : boolean
		{method} + @next(void) : Cell
		{method} - inBlock(void) : boolean
		{method} + getCoord(void) : Coord
	}
	note right of GridIt::getCoord
		"Coordonnées de la
		dernière Cell envoyé."
	end note
	java.util.Iterator ().. GridIt

	class "Grid" AS Grid{
		{field} - grid : Cell[][]
		{field} - lstCoordResCell : List<Coord>
		==
		.. Constructeur ..
		{method} + new Grid(/*lstParam*/) : Grid
		.. Obtenir une cellule ..
		{method} + getCell(Coord) : Cell
		{method} + getCell(GridIterator,Predicate<T>) : Cell
		{method} + getCoord(GridIterator,Predicate<T>) : Coord
		{method} + getLastCoord(void) : Coord
		.. Parcourir la grille ..
		{method} + @iterator(void) : GridIterator
		{method} + iterator(C,C,B,F<C,B>) : GridIterator
		{method} + getAreas(Coord) : GridIterator[2]
		{method} + getLineAreas(void) : GridIterator
		{method} + getColumnAreas(void) : GridIterator
		.. Autres ..
		{method} + serialize() : String
	}
	note left of Grid::getCell
		"Cherche une cellule matchant le prédicat,
		en se déplaçant suivant la fonction (une
		méthode de Grid.GridIterator)."
	end note
	note left of Grid::iterator
		"Crée un itérateur sur la grille allant
		du début(0,0) à la fin(Kakuro.LAST_COORD()).
		Le mode block est désactivé
		et le parcours est dans le sens par défaut."
	end note
	note left of Grid::serialize
		Les lignes sont séparées par des '\n'.
		> Exemple : "|B|B|W(5)|\\n|R(7,n)|W(n)|R(4,1)"
		> Devient : "||5|\\n7,n|3|4,1|\\n"'
	end note
	java.lang.Iterable ()- - Grid
	Grid - -* GridIt
}

center footer "La classes stockant les cellules du jeu et les parcourant"
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 17.0.10+7-Ubuntu-122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>